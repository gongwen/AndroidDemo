<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:id="@+id/activity_main"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical">

        <gw.com.code.view.CheckView
            android:id="@+id/circleView"
            android:layout_width="match_parent"
            android:layout_height="300dp" />

        <gw.com.code.view.DotViewPager
            android:id="@+id/mDotViewPager"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:background="#ff0000"></gw.com.code.view.DotViewPager>

        <gw.com.code.view.FolderTextView
            android:id="@+id/folderTextView"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:drawablePadding="5dp"
            android:ellipsize="end"
            android:text="上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。上面几乎是Region的所有API，很好理解，主要说明一下最后的一组关于Region组合的方式。组合即当前的Region和另外的一个Region组合，可以用不同的Op方式来进行组合。" />

        <gw.com.code.test.MeasureTextTestView
            android:layout_width="match_parent"
            android:layout_height="400dp"
            android:layout_gravity="center_horizontal" />

        <gw.com.code.view.TabIndicatorView
            android:id="@+id/indicator1"
            android:layout_width="match_parent"
            android:layout_height="30dp"
            android:layout_marginLeft="50dp"
            android:layout_marginRight="50dp"
            android:layout_marginTop="50dp"
            android:background="#ffffff"
            app:textSize="15sp"
            app:type="roundRect" />

        <gw.com.code.view.TabIndicatorView
            android:id="@+id/indicator2"
            android:layout_width="match_parent"
            android:layout_height="30dp"
            android:layout_marginLeft="50dp"
            android:layout_marginRight="50dp"
            android:layout_marginTop="50dp"
            android:background="#ffffff"
            app:textSize="15sp"
            app:type="rect" />

        <gw.com.code.view.TabIndicatorView
            android:id="@+id/indicator3"
            android:layout_width="match_parent"
            android:layout_height="30dp"
            android:layout_marginLeft="50dp"
            android:layout_marginRight="50dp"
            android:layout_marginTop="50dp"
            android:background="#ffffff"
            app:indicatorHeight="1dp"
            app:selectedColor="#ff0000"
            app:textSize="15sp"
            app:type="indicator" />

        <android.support.v4.view.ViewPager
            android:id="@+id/viewPager"
            android:layout_width="match_parent"
            android:layout_height="100dp"></android.support.v4.view.ViewPager>
    </LinearLayout>
</ScrollView>
